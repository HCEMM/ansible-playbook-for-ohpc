---

# This file is distributed under the Apache License (the
# "License"); you may not use this file except in compliance
# with the License.  See the LICENSE file distributed with
# this work for additional information regarding copyright
# ownership.
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
# This file is derived from recipe.sh in OpenHPC distribution
# and ported by Linaro Ltd. and Fujitsu Ltd.

#
# roles/nagios/tasks/main.yml
#

## Install Nagios on master and vnfs image
# if [[ ${enable_nagios} -eq 1 ]];then
- name: Setup packages Nagios
  when:
    - enable_nagios

  block:
  #     yum -y groupinstall ohpc-nagios
    - name: Install packages Nagios on master
      ansible.builtin.dnf:
        name: ohpc-nagios
        state: present
      when:
        - inventory_hostname in groups[nt_sms]

  #     yum -y --installroot=$CHROOT install nagios-plugins-all-ohpc nrpe-ohpc
    - name: Install packages Nagios plugins for computing node images on master
      ansible.builtin.dnf:
        state: present
        installroot: "{{ compute_chroot_loc }}"
        name:
          - nagios-plugins-all-ohpc
          - nrpe-ohpc
      when:
        - inventory_hostname in groups[nt_sms]
        - enable_warewulf

    - name: Install packages Nagios plugins on a computing node
      ansible.builtin.dnf:
        state: present
        name:
          - nagios-plugins-all-ohpc
          - nrpe-ohpc
      when:
        - inventory_hostname in groups[nt_cnodes]
        - not enable_warewulf

  #     chroot $CHROOT systemctl enable nrpe
    - name: Enable nrpe for computing node images on master
      ansible.builtin.command: chroot "{{ compute_chroot_loc }}" systemctl enable nrpe
      register: result
      failed_when: result.rc not in [0]
      when:
        - inventory_hostname in groups[nt_sms]
        - enable_warewulf

    - name: Enable nrpe on a computing node
      ansible.builtin.service:
        state: enable
        name: nrpe
      when:
        - inventory_hostname in groups[nt_cnodes]
        - not enable_warewulf

  #     perl -pi -e "s/^allowed_hosts=/# allowed_hosts=/" $CHROOT/etc/nagios/nrpe.cfg
    - name: Configure NRPE for computing node images on master
      ansible.builtin.lineinfile:
        path: "{{ compute_chroot_loc }}/etc/nagios/nrpe.cfg"
        backup: true
        regexp: '^allowed_hosts='
        line: "#allowed_hosts="
      when:
        - inventory_hostname in groups[nt_sms]
        - enable_warewulf

    - name: Configure NRPE on a computing node
      ansible.builtin.lineinfile:
        path: "/etc/nagios/nrpe.cfg"
        backup: true
        regexp: '^allowed_hosts='
        line: "#allowed_hosts="
      when:
        - inventory_hostname in groups[nt_cnodes]
        - not enable_warewulf

  #     echo "nrpe 5666/tcp # NRPE"         >> $CHROOT/etc/services
    - name: Register nrpe service port for computing node images on master
      ansible.builtin.lineinfile:
        path: "{{ compute_chroot_loc }}/etc/services"
        state: present
        backrefs: false
        regexp: '^nrpe 5666/tcp # NRPE$'
        line: "nrpe 5666/tcp # NRPE"
      when:
        - inventory_hostname in groups[nt_sms]
        - enable_warewulf

    - name: Register nrpe service port on a computing node
      ansible.builtin.lineinfile:
        path: "/etc/services"
        state: present
        backrefs: false
        regexp: '^nrpe 5666/tcp # NRPE$'
        line: "nrpe 5666/tcp # NRPE"
      when:
        - inventory_hostname in groups[nt_cnodes]
        - not enable_warewulf

  #     echo "nrpe : ${sms_ip}  : ALLOW"    >> $CHROOT/etc/hosts.allow
    - name: Allow nrpe port for computing node images on master
      ansible.builtin.lineinfile:
        path: "{{ compute_chroot_loc }}/etc/hosts.allow"
        state: present
        backrefs: false
        regexp: '^nrpe {{ d_colon }} {{ sms_ip }}  {{ d_colon }} ALLOW$'
        line: "nrpe {{ d_colon }} {{ sms_ip }}  {{ d_colon }} ALLOW"
      when:
        - inventory_hostname in groups[nt_sms]
        - enable_warewulf

    - name: Allow nrpe port on a computing node
      ansible.builtin.lineinfile:
        path: "/etc/hosts.allow"
        state: present
        backrefs: false
        regexp: '^nrpe {{ d_colon }} {{ sms_ip }}  {{ d_colon }} ALLOW$'
        line: "nrpe {{ d_colon }} {{ sms_ip }}  {{ d_colon }} ALLOW"
      when:
        - inventory_hostname in groups[nt_cnodes]
        - not enable_warewulf

  #     echo "nrpe : ALL : DENY"            >> $CHROOT/etc/hosts.allow
    - name: Set the nrpe port access policy for computing nodes on master
      ansible.builtin.lineinfile:
        path: "{{ compute_chroot_loc }}/etc/hosts.allow"
        state: present
        backrefs: false
        regexp: '^nrpe {{ d_colon }} ALL {{ d_colon }} DENY$'
        line: "nrpe {{ d_colon }} ALL {{ d_colon }} DENY"
      when:
        - inventory_hostname in groups[nt_sms]
        - enable_warewulf

    - name: Set the nrpe port access policy on a computing node
      ansible.builtin.lineinfile:
        path: "/etc/hosts.allow"
        state: present
        backrefs: false
        regexp: '^nrpe {{ d_colon }} ALL {{ d_colon }} DENY$'
        line: "nrpe {{ d_colon }} ALL {{ d_colon }} DENY"
      when:
        - inventory_hostname in groups[nt_cnodes]
        - not enable_warewulf

  # chroot $CHROOT /usr/sbin/useradd -c "NRPE user for the NRPE service" -d /var/run/nrpe -r -g nrpe \
  # -s /sbin/nologin nrpe
    - name: Add nrpe user for computing node images on master
      ansible.builtin.command:
        cmd: 'chroot {{ compute_chroot_loc }} /usr/sbin/useradd -c "NRPE user for the NRPE service" -d /var/run/nrpe -r -g nrpe -s /sbin/nologin nrpe'
      register: result
      failed_when: result.rc not in [0, 9]
      when:
        - inventory_hostname in groups[nt_sms]
        - enable_warewulf

    - name: Add nrpe group on a computing node
      ansible.builtin.group:
        state: present
        name: "nrpe"
      when:
        - inventory_hostname in groups[nt_cnodes]
        - not enable_warewulf

    - name: Add nrpe user on a computing node
      ansible.builtin.user:
        name: nrpe
        state: present
        group: "nrpe"
        shell: "/sbin/nologin"
        home: "/var/run/nrpe"
        comment: "NRPE user for the NRPE service"
      when:
        - inventory_hostname in groups[nt_cnodes]
        - not enable_warewulf

  # chroot $CHROOT /usr/sbin/groupadd -r nrpe
    - name: Add nrpe group for computing node images on master
      ansible.builtin.command:
        cmd: chroot "{{ compute_chroot_loc }}" /usr/sbin/groupadd -r nrpe
      register: result
      failed_when: result.rc not in [0, 9]
      when:
        - inventory_hostname in groups[nt_sms]
        - enable_warewulf

  #     mv /etc/nagios/conf.d/services.cfg.example /etc/nagios/conf.d/services.cfg
  # Note: mv command breaks the idempotency of installation.
  # So it is more preferable to use the cp command.
    - name: Copy the nagios configuration file from services.cfg.example to services.cfg on master
      ansible.builtin.copy:
        src: /etc/nagios/conf.d/services.cfg.example
        dest: /etc/nagios/conf.d/services.cfg
        mode: '0644'
      when:
        - inventory_hostname in groups[nt_sms]

  #     mv /etc/nagios/conf.d/hosts.cfg.example /etc/nagios/conf.d/hosts.cfg
  # Note: mv command breaks the idempotency of installation.
  # So it is more preferable to use the cp command.
    - name: Copy hosts.cfg.example to hosts.cfg on master
      ansible.builtin.copy:
        src: /etc/nagios/conf.d/hosts.cfg.example
        dest: /etc/nagios/conf.d/hosts.cfg
        mode: '0644'
      when:
        - inventory_hostname in groups[nt_sms]

  #     for ((i=0; i<$num_computes; i++)) ; do
  #        perl -pi -e "s/HOSTNAME$(($i+1))/${c_name[$i]}/ || s/HOST$(($i+1))_IP/${c_ip[$i]}/" \
  #        /etc/nagios/conf.d/hosts.cfg
  #     done
    - name: HOSTNAME configuration for naios on master
      ansible.builtin.replace:
        dest: /etc/nagios/conf.d/hosts.cfg
        regexp: 'HOSTNAME{{ item.num }}'
        replace: "{{ item.c_name }}"
        backup: true
      with_items: "{{ compute_nodes }}"
      when:
        - inventory_hostname in groups[nt_sms]

    - name: HOST IP configuration for naios on master
      ansible.builtin.replace:
        dest: /etc/nagios/conf.d/hosts.cfg
        regexp: 'HOST{{ item.num }}_IP'
        replace: "{{ item.c_ip }}"
        backup: true
      with_items: "{{ compute_nodes }}"
      when:
        - inventory_hostname in groups[nt_sms]

  #     perl -pi -e "s/ \/bin\/mail/ \/usr\/bin\/mailx/g" /etc/nagios/objects/commands.cfg
    - name: Update location of mail binary for alert commands on master
      ansible.builtin.replace:
        dest: /etc/nagios/objects/commands.cfg
        regexp: '\s+/usr/bin/mail\s+'
        replace: ' /usr/bin/mailx '
        backup: true
      when:
        - inventory_hostname in groups[nt_sms]

  #     perl -pi -e "s/nagios\@localhost/root\@${sms_name}/" /etc/nagios/objects/contacts.cfg
    - name: Update email address of contact for alerts on master
      ansible.builtin.replace:
        dest: /etc/nagios/objects/contacts.cfg
        regexp: 'nagios@localhost'
        replace: "root@{{ sms_name }}"
        backup: true
      when:
        - inventory_hostname in groups[nt_sms]

  #     echo command[check_ssh]=/usr/lib64/nagios/plugins/check_ssh localhost >> $CHROOT/etc/nagios/nrpe.cfg
    - name: Add check_ssh command for remote hosts plugin for computing node images on master
      ansible.builtin.lineinfile:
        path: "{{ compute_chroot_loc }}/etc/nagios/nrpe.cfg"
        state: present
        backrefs: false
        regexp: '^command[check_ssh]=/usr/lib64/nagios/plugins/check_ssh localhost$'
        line: "command[check_ssh]=/usr/lib64/nagios/plugins/check_ssh localhost"
      when:
        - inventory_hostname in groups[nt_sms]
        - enable_warewulf

    - name: Add check_ssh command for remote hosts plugin on a computing node
      ansible.builtin.lineinfile:
        path: "/etc/nagios/nrpe.cfg"
        state: present
        backrefs: false
        regexp: '^command[check_ssh]=/usr/lib64/nagios/plugins/check_ssh localhost$'
        line: "command[check_ssh]=/usr/lib64/nagios/plugins/check_ssh localhost"
      when:
        - inventory_hostname in groups[nt_cnodes]
        - not enable_warewulf

  #
  # We should ensure to access configuration files. cp command changes their group to root.
  #
    - name: Chown root:nagios /etc/nagios/conf.d/services.cfg on master
      ansible.builtin.file:
        path: "/etc/nagios/conf.d/services.cfg"
        owner: root
        group: nagios
      when:
        - inventory_hostname in groups[nt_sms]

    - name: Chown root:nagios /etc/nagios/conf.d/hosts.cfg on master
      ansible.builtin.file:
        path: "/etc/nagios/conf.d/hosts.cfg"
        owner: root
        group: nagios
      when:
        - inventory_hostname in groups[nt_sms]

  #     chkconfig nagios on
    - name: Enable nagios on master
      ansible.builtin.service:
        name: nagios
        enabled: true
      when:
        - inventory_hostname in groups[nt_sms]

  #     systemctl start nagios
    - name: Start nagios on master
      ansible.builtin.service:
        name: nagios
        state: started
      when:
        - inventory_hostname in groups[nt_sms]

  #     chmod u+s `which ping`
  # - name: Set root to ping on master #Todo
  #   command: chmod u+s `which ping`
  # fi
