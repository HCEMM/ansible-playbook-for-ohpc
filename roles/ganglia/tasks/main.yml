---

# This file is distributed under the Apache License (the
# "License"); you may not use this file except in compliance
# with the License.  See the LICENSE file distributed with
# this work for additional information regarding copyright
# ownership.
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
# This file is derived from recipe.sh in OpenHPC distribution
# and ported by Linaro Ltd. and Fujitsu Ltd.

#
# roles/ganglia/tasks/main.yml
#
- name: Install Ganglia system-wide
  when:
    - enable_ganglia
  block:
    #     # Install Ganglia on master
    #     yum -y groupinstall ohpc-ganglia
    - name: Install ohpc-ganglia on master
      ansible.builtin.dnf:
        state: present
        name: ohpc-ganglia
      when:
        - inventory_hostname in groups[nt_sms]

    #     yum -y --installroot=$CHROOT install ganglia-gmond-ohpc
    - name: Install ganglia-gmond-ohpc for computing image on master
      ansible.builtin.dnf:
        state: present
        installroot: "{{ compute_chroot_loc }}"
        name:
          - ganglia-gmond-ohpc
      when:
        - inventory_hostname in groups[nt_sms]
        - enable_warewulf

    - name: Install ganglia-gmond-ohpc on a computing node
      ansible.builtin.dnf:
        state: present
        name: ganglia-gmond-ohpc
      when:
        - inventory_hostname in groups[nt_cnodes]
        - not enable_warewulf

    #     Note: We make the directory for ganglia on sms just in case.
    - name: Mkdir /etc/ganglia on master
      ansible.builtin.file:
        path: "/etc/ganglia"
        state: directory
        mode: '0755'
      when:
        - inventory_hostname in groups[nt_sms]

    #     cp /opt/ohpc/pub/examples/ganglia/gmond.conf /etc/ganglia/gmond.conf
    - name: Copy /opt/ohpc/pub/examples/ganglia/gmond.conf to /etc/ganglia/gmond.conf on master
      ansible.builtin.copy:
        src: /opt/ohpc/pub/examples/ganglia/gmond.conf
        dest: /etc/ganglia/gmond.conf
        mode: '0644'
      when:
        - inventory_hostname in groups[nt_sms]

    #     perl -pi -e "s/<sms>/${sms_name}/" /etc/ganglia/gmond.conf
    - name: HOSTNAME configuration on master
      ansible.builtin.replace:
        dest: /etc/ganglia/gmond.conf
        regexp: '<sms>'
        replace: "{{ sms_name }}"
        backup: true
      when:
        - inventory_hostname in groups[nt_sms]

    #     cp /etc/ganglia/gmond.conf $CHROOT/etc/ganglia/gmond.conf
    - name: Copy ganglia configuration to compute image on master
      ansible.builtin.copy:
        src: /etc/ganglia/gmond.conf
        dest: "{{ compute_chroot_loc }}/etc/ganglia/gmond.conf"
        mode: '0644'
      when:
        - inventory_hostname in groups[nt_sms]
        - enable_warewulf

    #     cp /etc/ganglia/gmond.conf $CHROOT/etc/ganglia/gmond.conf
    - name: Fetch /etc/ganglia/gmond.conf in sms to a ansible local /tmp
      ansible.builtin.fetch:
        src: /etc/ganglia/gmond.conf
        dest: /tmp/gmond.conf
        flat: true
      when:
        - inventory_hostname in groups[nt_sms]
        - enable_warewulf

    - name: Copy /tmp/gmond.conf in ansible local to a computing node on master
      ansible.builtin.copy:
        src: /tmp/gmond.conf
        dest: /etc/ganglia/gmond.conf
        mode: '0644'
      when:
        - inventory_hostname in groups[nt_cnodes]
        - not enable_warewulf

    - name: Remove /tmp/gmond.conf on ansible local
      ansible.builtin.file:
        path: /tmp/gmond.conf
        state: absent
      delegate_to: localhost
      when:
        - inventory_hostname in groups[nt_sms]
        - not enable_warewulf

    #     echo "gridname MySite" >> /etc/ganglia/gmetad.conf
    - name: Set gridname for the cluster on master
      ansible.builtin.lineinfile:
        path: /etc/ganglia/gmetad.conf
        state: present
        backrefs: false
        regexp: '^gridname \"{{ ganglia_grid_name }}\"$'
        line: "gridname \"{{ ganglia_grid_name }}\""
      when:
        - inventory_hostname in groups[nt_sms]

    #     systemctl enable gmond
    - name: Enable gmond on master
      ansible.builtin.service:
        name: gmond
        enabled: true
      when:
        - inventory_hostname in groups[nt_sms]

    #     systemctl enable gmetad
    - name: Enable gmetad on master
      ansible.builtin.service:
        name: gmetad
        enabled: true
      when:
        - inventory_hostname in groups[nt_sms]

    #     systemctl start gmond
    - name: Start gmond on master
      ansible.builtin.service:
        name: gmond
        state: started
      when:
        - inventory_hostname in groups[nt_sms]

    #     systemctl start gmetad
    - name: Start gmetad on master
      ansible.builtin.service:
        name: gmetad
        state: started
      when:
        - inventory_hostname in groups[nt_sms]

    #     chroot $CHROOT systemctl enable gmond
    - name: Enable gmond for computing images on master
      ansible.builtin.command:
        cmd: chroot "{{ compute_chroot_loc }}" systemctl enable gmond
        creates: "{{ compute_chroot_loc }}/etc/systemd/system/multi-user.target.wants/gmond.service"
      when:
        - inventory_hostname in groups[nt_sms]
        - enable_warewulf

    - name: Enable gmond on a computing node
      ansible.builtin.service:
        name: gmond
        enabled: true
      when:
        - inventory_hostname in groups[nt_cnodes]
        - not enable_warewulf

    #     systemctl try-restart httpd
    - name: Restart httpd on master
      ansible.builtin.service:
        name: httpd
        state: restarted
      when:
        - inventory_hostname in groups[nt_sms]
